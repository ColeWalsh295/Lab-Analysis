Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols] %>%
select(-c('q40a', 'q40b'))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
print(grep("a$", names(dt)))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
print(dt[, order(names(dt %>% select(grep("a$", names(.)))))])
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols] %>%
select(-c('q40a', 'q40b'))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
names(pre.df %>% select(grep("a$", names(.))))
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols] %>%
select(-c('q40a', 'q40b'))
print(names(dt))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols] %>%
select(-list('q40a', 'q40b'))
print(names(dt))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols] %>%
data.frame(.) %>%
select(-list('q40a', 'q40b'))
print(names(dt))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols] %>%
data.frame(.) %>%
select(-c('q40a', 'q40b'))
print(names(dt))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
dt <- dt[, -c('q40a', 'q40b')]
print(names(dt))
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
names(pre.df %>% select(grep("a$", names(.))))
library(tidyverse)
library(xlsx)
library(data.table)
library(lmerTest)
library(stargazer)
library(lavaan)
library(semPlot)
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
dt <- dt[, -c('q40a', 'q40b')]
# scores.df <- sweep(dt[, ..answers.cols], 2,
#                    as.numeric(as.character(unlist(answers))), "*")
#
# scores.df$student.score <- rowSums(scores.df %>% select(grep("a$", names(.))))
# scores.df$expert.score <- rowSums(scores.df %>% select(grep("b$", names(.))))
dt$student.score <- rowSums(dt %>% select(grep("a$", names(.))))
dt$expert.score <- rowSums(dt %>% select(grep("b$", names(.))))
# df <- cbind(dt, scores.df[, c('student.score', 'expert.score')])
return(dt)
}
cis.df <- read.csv('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_cis.csv')
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
cis.pre.df <- right_join(cis.df, pre.df, by = c('pre_survey_id' = 'survey_id'))
post.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_post.csv')
full.df <- full_join(cis.pre.df, post.df,
by = c('post_survey_id' = 'survey_id',
'anon_student_id'), suffix = c('.pre', '.post'))
df.matched <- full.df %>%
filter(!is.na(student.score.pre) & !is.na(student.score.post))
df.matched[is.na(df.matched$Q48) | (df.matched$Q48 == 0),
'Q48'] <- df.matched[is.na(df.matched$Q48) | (df.matched$Q48 == 0), 'Q47']
df.matched <- df.matched %>%
mutate(Major = case_when(
Q48 == 1 ~ 'Physics',
Q48 == 2 ~ 'Chemistry',
Q48 == 3 ~ 'Biochemistry',
Q48 == 4 ~ 'Biology',
Q48 == 5 ~ 'Engineering',
Q48 == 6 ~ 'Engineering Physics',
Q48 == 7 ~ 'Astronomy',
Q48 == 8 ~ 'Astrophysics',
Q48 == 9 ~ 'Geology/geophysics',
Q48 == 10 ~ 'Math/applied math',
Q48 == 11 ~ 'Computer science',
Q48 == 12 ~ 'Physiology',
Q48 == 13 ~ 'Other science',
Q48 == 14 ~ 'Non-science',
Q48 == 15 ~ 'Open/undeclared',
TRUE ~ NA_character_
))
df.matched %>%
group_by(Major) %>%
summarize(N = n(), Avg.pre = mean(student.score.pre),
Avg.post = mean(student.score.post))
head(df.matched)
df.matched[df.matched$post_survey_id == 'e9iS05zkYUGdsc5', c('anon_student_id', 'student.score.pre', 'student.score.post')]
Read.Score('C:/Users/Cole/Documents/ECLASS_DATA/Raw_Surveys/Fall2017/POST/Fall2017POST-Cornell University-Phys-1116-Natasha_Holmes-e9iS05zkYUGdsc5.csv')[, c('Q3_1_TEXT', 'Q3_2_TEXT', 'student.score', 'expert.score')]
df <- read.csv('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_post.csv')
table(df$q15a)
df.matched[df.matched$post_survey_id == 'e9iS05zkYUGdsc5', c('anon_student_id', 'student.score.pre', 'student.score.post', 'duration.pre')]
library(tidyverse)
library(xlsx)
library(data.table)
library(lmerTest)
library(stargazer)
library(lavaan)
library(semPlot)
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
df <- dt[, -c('q40a', 'q40b')]
df$student.score <- rowSums(df %>% select(grep("a$", names(.))))
df$expert.score <- rowSums(df %>% select(grep("b$", names(.))))
return(dt)
}
cis.df <- read.csv('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_cis.csv')
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
cis.pre.df <- right_join(cis.df, pre.df, by = c('pre_survey_id' = 'survey_id'))
post.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_post.csv')
full.df <- full_join(cis.pre.df, post.df,
by = c('post_survey_id' = 'survey_id',
'anon_student_id'), suffix = c('.pre', '.post'))
df.matched <- full.df %>%
filter(!is.na(student.score.pre) & !is.na(student.score.post))
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
answers.cols <- grep("$(a|b)", names(dt))
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
df <- dt[, -c('q40a', 'q40b')]
df$student.score <- rowSums(df %>% select(grep("a$", names(.))))
df$expert.score <- rowSums(df %>% select(grep("b$", names(.))))
return(dt)
}
library(tidyverse)
library(xlsx)
library(data.table)
library(lmerTest)
library(stargazer)
library(lavaan)
library(semPlot)
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
answers.cols <- grep("$(a|b)", names(dt))
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
df <- dt[, -c('q40a', 'q40b')]
df$student.score <- rowSums(df %>% select(grep("a$", names(.))))
df$expert.score <- rowSums(df %>% select(grep("b$", names(.))))
return(dt)
}
cis.df <- read.csv('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_cis.csv')
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
cis.pre.df <- right_join(cis.df, pre.df, by = c('pre_survey_id' = 'survey_id'))
post.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_post.csv')
full.df <- full_join(cis.pre.df, post.df,
by = c('post_survey_id' = 'survey_id',
'anon_student_id'), suffix = c('.pre', '.post'))
df.matched <- full.df %>%
filter(!is.na(student.score.pre) & !is.na(student.score.post))
head(pre.df)
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
answers.cols <- grep("$(a|b)", names(dt))
print(answers.cols)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
df <- dt[, -c('q40a', 'q40b')]
df$student.score <- rowSums(df %>% select(grep("a$", names(.))))
df$expert.score <- rowSums(df %>% select(grep("b$", names(.))))
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
answers <- read.xlsx('C:/Users/Cole/Documents/ECLASS_DATA/Answers_Template.xlsx', sheetName = 'Converted', rowIndex = c(2, 4), header = FALSE)
colnames(answers) <- as.character(unlist(answers[2,]))
answers <- answers[1,]
answers <- as.data.frame(t(answers)) %>%
`colnames<-`(c('Answer')) %>%
mutate(Question = row.names(.)) %>%
filter(!grepl('\\.1$', Question)) %>%
mutate(Answer = case_when(
Answer == 'A' ~ 1,
Answer == 'D' ~ -1,
TRUE ~ NA_real_
)) %>%
filter(!is.na(Answer))
answers <- data.frame(t(answers)) %>%
`colnames<-`(as.character(unlist(.[2,]))) %>%
slice(., 1)
answers.cols <- names(answers)
Read.Score <- function(file){
dt <- fread(file)
answers.cols <- grep("$a", names(dt))
print(answers.cols)
dt[, (answers.cols) := lapply(.SD, function(x) case_when(x == 5 ~ 1,
x == 1 ~ -1,
TRUE ~ 0)),
.SDcols = answers.cols]
df <- dt[, -c('q40a', 'q40b')]
df$student.score <- rowSums(df %>% select(grep("a$", names(.))))
df$expert.score <- rowSums(df %>% select(grep("b$", names(.))))
return(dt)
}
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
pre.df <- Read.Score('C:/Users/Cole/Documents/GRA_Summer2020/eclass-public-master/anon_pre.csv')
setwd("C:/Users/Cole/Documents/GitHub/Student-Lab-Interactions")
source('GraphBuilder.R')
boris.to.adjacency(file1 = 'C:/Users/Cole/Box Sync/Network analysis/Exported_Data/P1112_Fall2019/Scan_Method/Scan_10_23_all_MS.csv', nvid1 = 9, offset1 = 0, method = 1)
boris.to.adjacency(file1 = 'C:/Users/Cole/Box Sync/Network analysis/Exported_Data/P1112_Fall2019/Scan_Method/Scan_10_23_all_MS.csv', nvid1 = 9, offset1 = 0, method = 1)
