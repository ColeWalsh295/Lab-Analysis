plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'])
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color)
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color)
c = 15
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color)
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = TRUE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color)
c = 15
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = TRUE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color)
c = 25
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = TRUE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color)
centralization.closeness(g.btw)
centralization.degree(g.btw)
centr.degree(g.btw)
centralization.degree(g.btw)
V(g)$centr.deg <- centralization.degree(g.btw)$res
V(g)
V(g)$centr.deg
c = 25
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
V(g)$centr.deg <- centralization.degree(g.btw)$res
V(g)$size <- V(g)$centr.deg + 1
V(g)$size
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
c = 25
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- V(g.btw)$centr.deg + 1
V(g.btw)$size
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
c.vertex = 25
c.edge = 5
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
c.vertex = 25
c.edge = 3
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
c.vertex = 25
c.edge = 2
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
c.vertex = 25
c.edge = 1.5
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
c.vertex = 25
c.edge = 1.2
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
library(dplyr)
library(reshape2)
library(tidyr)
library(igraph)
df.1 <- read.csv('C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/cam1.csv', skip = 19, stringsAsFactors = FALSE)
df.2 <- read.csv('C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/cam2.csv', skip = 21, stringsAsFactors = FALSE)
df <- rbind(df.1, df.2)[, c('Time', 'Subject', 'Behavior')]
# I mislabled 4C-Or as 4B-Or, let's fix that
df[df[, 'Subject'] == '4B-Or', 'Subject'] <- '4C-Or'
df <- df %>%
rowwise() %>%
mutate(Subject = strsplit(Subject, '-')[[1]][1])
df.dcast <- dcast(df, Time ~ Subject)
df.fill <- fill(df.dcast, -Time) %>%
select(-c('NA'))
df.fill[is.na(df.fill)] <- 'StudentExit'
cols.students <- colnames(df.fill)[2:ncol(df.fill)]
cols.comb <- unlist(lapply(combn(colnames(df.fill)[2:ncol(df.fill)], 2, simplify = FALSE), paste, collapse = ':'))
times.vec <- rep(0, length(cols.comb))
names(times.vec) <- cols.comb
for (row in 1:(nrow(df.fill) - 1)){
for (col1 in 1:(ncol(df.fill) - 1)){
for (col2 in (col1 + 1):ncol(df.fill)){
if((df.fill[row, col1] == df.fill[row, col2]) & (df.fill[row, col1] != 'StudentExit')){
times.vec[paste(cols.students[col1 - 1], cols.students[col2 - 1], sep = ':')] <- times.vec[paste(cols.students[col1 - 1], cols.students[col2 - 1], sep = ':')] + df.fill[(row + 1), 'Time'] - df.fill[row, 'Time']
}
}
}
}
df.times <- data.frame(times.vec)
df.times$Students <- row.names(df.times)
row.names(df.times) <- c()
df.times <- df.times %>%
rowwise() %>%
mutate(Student1 = strsplit(Students, ':')[[1]][1],
Student2 = strsplit(Students, ':')[[1]][2],
Time = round(times.vec)) %>%
select(-c('Students', 'times.vec')) %>%
filter(Time > 0)
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- 'black'
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, margin = -1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, margin = -0.5)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, margin = -0.2)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, rescale = FALSE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, rframe = TRUE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE)
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE)
library(dplyr)
library(reshape2)
library(tidyr)
library(igraph)
df.1 <- read.csv('C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/cam1.csv', skip = 19, stringsAsFactors = FALSE)
df.2 <- read.csv('C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/cam2.csv', skip = 21, stringsAsFactors = FALSE)
df <- rbind(df.1, df.2)[, c('Time', 'Subject', 'Behavior')]
# I mislabled 4C-Or as 4B-Or, let's fix that
df[df[, 'Subject'] == '4B-Or', 'Subject'] <- '4C-Or'
df <- df %>%
rowwise() %>%
mutate(Subject = strsplit(Subject, '-')[[1]][1])
df.dcast <- dcast(df, Time ~ Subject)
df.fill <- fill(df.dcast, -Time) %>%
select(-c('NA'))
df.fill[is.na(df.fill)] <- 'StudentExit'
cols.students <- colnames(df.fill)[2:ncol(df.fill)]
cols.comb <- unlist(lapply(combn(colnames(df.fill)[2:ncol(df.fill)], 2, simplify = FALSE), paste, collapse = ':'))
times.vec <- rep(0, length(cols.comb))
names(times.vec) <- cols.comb
for (row in 1:(nrow(df.fill) - 1)){
for (col1 in 1:(ncol(df.fill) - 1)){
for (col2 in (col1 + 1):ncol(df.fill)){
if((df.fill[row, col1] == df.fill[row, col2]) & (df.fill[row, col1] != 'StudentExit')){
times.vec[paste(cols.students[col1 - 1], cols.students[col2 - 1], sep = ':')] <- times.vec[paste(cols.students[col1 - 1], cols.students[col2 - 1], sep = ':')] + df.fill[(row + 1), 'Time'] - df.fill[row, 'Time']
}
}
}
}
df.times <- data.frame(times.vec)
df.times$Students <- row.names(df.times)
row.names(df.times) <- c()
df.times <- df.times %>%
rowwise() %>%
mutate(Student1 = strsplit(Students, ':')[[1]][1],
Student2 = strsplit(Students, ':')[[1]][2],
Time = round(times.vec)) %>%
select(-c('Students', 'times.vec')) %>%
filter(Time > 0)
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout.fruchterman.reingold())
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout.fruchterman.reingold(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_dh(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_fr(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_gem(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_kk(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_lgl(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_sugiyama(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_kk(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('red', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('blue', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 20
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('blue', 0.5)
c.vertex = 20
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 210
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
c.vertex = 10
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 10
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
c.vertex = 1
c.edge = 100
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 50
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 25
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 40
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1.5
c.edge = 40
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 40
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.2)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.15)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.15)
par(mar = c(10, 4, 4, 4))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
par(mar = c(10, 4, 0, 4))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 4, 0, 4))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(-1, -1, -1, -1))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(-2, 0, 0, 0))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0) + 0.1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_with_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_with_kk(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
source(GraphBuilder)
source(GraphBuilder.R)
source(GraphBuilder.R)
source(GraphBuilder)
setwd("C:/Users/Cole/Documents/GitHub/Student-Lab-Interactions")
source(GraphBuilder)
source(GraphBuilder)
source(GraphBuilder.R)
source('GraphBuilder.R')
source('GraphBuilder.R')
