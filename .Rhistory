if((df.fill[row, col1] == df.fill[row, col2]) & (df.fill[row, col1] != 'StudentExit')){
times.vec[paste(cols.students[col1 - 1], cols.students[col2 - 1], sep = ':')] <- times.vec[paste(cols.students[col1 - 1], cols.students[col2 - 1], sep = ':')] + df.fill[(row + 1), 'Time'] - df.fill[row, 'Time']
}
}
}
}
df.times <- data.frame(times.vec)
df.times$Students <- row.names(df.times)
row.names(df.times) <- c()
df.times <- df.times %>%
rowwise() %>%
mutate(Student1 = strsplit(Students, ':')[[1]][1],
Student2 = strsplit(Students, ':')[[1]][2],
Time = round(times.vec)) %>%
select(-c('Students', 'times.vec')) %>%
filter(Time > 0)
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout.fruchterman.reingold())
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout.fruchterman.reingold(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_dh(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_fr(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_gem(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_kk(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_lgl(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_sugiyama(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_kk(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_with_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('red', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 25
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('blue', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 20
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('blue', 0.5)
c.vertex = 20
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 210
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
c.vertex = 10
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.vertex
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.edge
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 1
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 10
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
c.vertex = 1
c.edge = 100
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 50
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 25
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 40
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1.5
c.edge = 40
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
c.vertex = 1
c.edge = 40
g = graph_from_data_frame(df.times, directed = FALSE)
E(g)$weight = df.times$Time/c.edge
V(g)$gender <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M', 'M', 'M', 'M', 'F')
V(g)$color <- ifelse(V(g)$gender == 'M', "green", "orange")
E(g)$group <- ifelse(substr(ends(g, E(g))[, 1], 1, 1) == substr(ends(g, E(g))[, 2], 1, 1), 'within', 'between')
E(g)$color <- adjustcolor('black', 0.5)
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, frame = TRUE, layout = layout_nicely(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.2)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.15)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw), margin = -0.15)
par(mar = c(10, 4, 4, 4))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
par(mar = c(10, 4, 0, 4))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 4, 0, 4))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(-1, -1, -1, -1))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(-2, 0, 0, 0))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0) + 0.1)
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_with_mds(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_with_kk(g.btw))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
g.btw <- subgraph.edges(g, E(g)[E(g)$group == 'between'], delete.vertices = FALSE)
V(g.btw)$centr.deg <- centralization.degree(g.btw)$res
V(g.btw)$size <- (V(g.btw)$centr.deg + 1) * c.vertex
par(mar = c(0, 0, 0, 0))
plot(g.btw, edge.width = E(g.btw)$weight, vertex.color = V(g.btw)$color, edge.color = E(g)$color, vertex.size = V(g.btw)$size, layout = layout_nicely(g.btw))
source(GraphBuilder)
source(GraphBuilder.R)
source(GraphBuilder.R)
source(GraphBuilder)
setwd("C:/Users/Cole/Documents/GitHub/Student-Lab-Interactions")
source(GraphBuilder)
source(GraphBuilder)
source(GraphBuilder.R)
source('GraphBuilder.R')
source('GraphBuilder.R')
source('GraphBuilder.R')
gender.vec <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
```
gender.vec <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
source('GraphBuilder.R')
source('GraphBuilder.R')
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
d1 <- edge_density(g)
d1.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d1.w
V(g)
V(g)$name
substr(ends(g, V(g))[, 1], 1, 1)
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
substr(ends(g, V(g))[, 1], 1, 1)
ends(g, V(g))
V(g)
substr(V(g)$name, 1, 1)
plot(g, edge.width = E(g)$weight, vertex.color = V(g)$color, edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
substr(V(g)$name, 1, 1)
V(g)$name
source('GraphBuilder.R')
library(RColorBrewer)
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer_pal(length(unique(V(g)$group)), "Dark2")
library(RColorBrewer)
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer_pal(length(unique(V(g)$group)), "Dark2")
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer.pal(length(unique(V(g)$group)), "Dark2")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
d1 <- edge_density(g)
d1.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d1.w
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer.pal(length(unique(V(g)$group)), "Dark1")
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer.pal(length(unique(V(g)$group)), "Dark2")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
d1 <- edge_density(g)
d1.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d1.w
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g))
d1 <- edge_density(g)
d1.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d1.w
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = autocurve.edges2(g))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = curve_multiple(g))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.3)
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.5)
gender.vec <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.5)
d2 <- edge_density(g)
d2.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d2.w
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 1)
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.1)
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.1)
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.1)
gender.vec <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.1)
d2 <- edge_density(g)
d2.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d2.w
g = create.graph(file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_25/cam2.csv', nvid1 = 1)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.1)
d3 <- edge_density(g)
d3.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d3.w
g = create.graph(file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_25/cam2.csv', nvid1 = 1)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.2)
d3 <- edge_density(g)
d3.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d3.w
gender.vec <- c('M', 'F', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.2)
d2 <- edge_density(g)
d2.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d2.w
gender.vec <- c('M', 'F', 'M', 'F', 'F', 'F', 'F', 'M', 'M', 'M', 'M', 'M', 'M', 'F', 'F', 'M',
'M', 'M', 'M', 'F')
g = create.graph(gender.vec = gender.vec,
file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3, nvid2 = 6)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.2)
d1 <- edge_density(g)
d1.w <- edge_density(g) * sum(E(g)$Time) / length(E(g))
d1.w
g.inter.9.25 = create.graph(file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_25/cam2.csv', nvid1 = 1)
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g.inter.9.25, edge.width = E(g.inter.9.25)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.25, "group")))], edge.color = E(g.inter.9.25)$color, vertex.size = V(g.inter.9.25)$size, layout = layout_nicely(g.inter.9.25), edge.curved = 0.2)
d3 <- edge_density(g.inter.9.25)
d3.w <- edge_density(g.inter.9.25) * sum(E(g.inter.9.25)$Time) / length(E(g.inter.9.25))
g.inter.9.25 = create.graph(file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_25/cam2.csv', nvid1 = 1)
pal <- brewer.pal(length(unique(V(g.inter.9.25)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g.inter.9.25, edge.width = E(g.inter.9.25)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.25, "group")))], edge.color = E(g.inter.9.25)$color, vertex.size = V(g.inter.9.25)$size, layout = layout_nicely(g.inter.9.25), edge.curved = 0.2)
d3 <- edge_density(g.inter.9.25)
d3.w <- edge_density(g.inter.9.25) * sum(E(g.inter.9.25)$Time) / length(E(g.inter.9.25))
g.inter.9.18 = create.graph(file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_18/cam2.csv', nvid1 = 5, nvid2 = 7)
pal <- brewer.pal(length(unique(V(g.inter.9.18)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g.inter.9.18, edge.width = E(g.inter.9.18)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.18, "group")))], edge.color = E(g.inter.9.18)$color, vertex.size = V(g.inter.9.18)$size, layout = layout_nicely(g.inter.9.18), edge.curved = 0.2)
d2 <- edge_density(g.inter.9.18)
d2.w <- edge_density(g.inter.9.18) * sum(E(g.inter.9.18)$Time) / length(E(g.inter.9.18))
plot(g.inter.9.18, edge.width = E(g.inter.9.18)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.18, "group")))], edge.color = E(g.inter.9.18)$color, vertex.size = V(g.inter.9.18)$size, layout = layout_nicely(g.inter.9.18), edge.curved = 0.2)
plot(g.inter.9.18, edge.width = E(g.inter.9.18)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.18, "group")))], edge.color = E(g.inter.9.18)$color, vertex.size = V(g.inter.9.18)$size, layout = layout_nicely(g.inter.9.18), edge.curved = 0.2)
plot(g.inter.9.18, edge.width = E(g.inter.9.18)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.18, "group")))], edge.color = E(g.inter.9.18)$color, vertex.size = V(g.inter.9.18)$size, layout = layout_nicely(g.inter.9.18), edge.curved = 0.2)
plot(g.inter.9.18, edge.width = E(g.inter.9.18)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g.inter.9.18, "group")))], edge.color = E(g.inter.9.18)$color, vertex.size = V(g.inter.9.18)$size, layout = layout_nicely(g.inter.9.18), edge.curved = 0.2)
plot.graph <- function(g){
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.2)
}
plot.graph(g.inter.9.11)
g.inter.9.11 = create.graph(file1 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam1.csv',
file2 = 'C:/Users/Cole/Documents/GRA_Spring2020/Student-Lab-Interactions/Videos/9_11/cam2.csv', nvid1 = 3,
nvid2 = 6)
plot.graph(g.inter.9.11)
plot.graph <- function(g){
pal <- brewer.pal(length(unique(V(g)$group)), "Set1")
par(mar = c(0, 0, 0, 0))
plot(g, edge.width = E(g)$weight, vertex.color = pal[as.numeric(as.factor(vertex_attr(g, "group")))], edge.color = E(g)$color, vertex.size = V(g)$size, layout = layout_nicely(g), edge.curved = 0.2)
}
density.calc <- function(g){
d <- edge_density(g)
dw <- edge_density(g) * sum(E(g)$Time) / length(E(g))
return(c(d, dw))
}
density.calc(g)
inter.graphs.wednesday <- c(g.inter.9.11, g.inter.9.18, g.inter.9.25)
lapply(inter.graphs.wednesday, density.calc)
sapply(inter.graphs.wednesday, density.calc)
tapply(inter.graphs.wednesday, density.calc)
inter.graphs.wednesday <- list(g.inter.9.11, g.inter.9.18, g.inter.9.25)
lapply(inter.graphs.wednesday, density.calc)
unlist(lapply(inter.graphs.wednesday, density.calc))
data.frame(lapply(inter.graphs.wednesday, density.calc))
unlist(lapply(inter.graphs.wednesday, density.calc))
as.data.frame(matrix(unlist(unlist(lapply(inter.graphs.wednesday, density.calc))),
nrow = length(inter.graphs.wednesday)))
matrix(unlist(unlist(lapply(inter.graphs.wednesday, density.calc))),
nrow = length(inter.graphs.wednesday))
as.data.frame(matrix(unlist(lapply(inter.graphs.wednesday, density.calc)),
nrow = length(inter.graphs.wednesday)))
unlist(lapply(inter.graphs.wednesday, density.calc))
as.data.frame(matrix(unlist(lapply(inter.graphs.wednesday, density.calc)),
ncol = length(inter.graphs.wednesday)))
as.data.frame(matrix(unlist(lapply(inter.graphs.wednesday, density.calc)),
ncol = length(inter.graphs.wednesday)).T)
as.data.frame(t(matrix(unlist(lapply(inter.graphs.wednesday, density.calc)),
ncol = length(inter.graphs.wednesday))))
